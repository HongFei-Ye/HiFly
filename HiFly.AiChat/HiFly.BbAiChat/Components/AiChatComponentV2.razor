@using Microsoft.AspNetCore.Components
@using HiFly.BbAiChat.Components.Header
@using HiFly.BbAiChat.Components.Sidebar
@using HiFly.BbAiChat.Components.Messages
@using HiFly.BbAiChat.Components.Input
@using HiFly.BbAiChat.Components.Settings

<div class="ai-chat-container">
    <!-- 顶部头部 -->
    <AiChatHeader Title="@Title"
                  ShowSettingsPanel="ShowRightPanel"
                  HeaderTemplate="HeaderTemplate"
                  OnToggleSettings="HandleToggleSettings" />

    <!-- 主体区域 -->
    <div class="ai-chat-body">
        <!-- 左侧面板 -->
        @if (ShowLeftPanel)
        {
            <AiChatSidebar IsCollapsed="IsLeftPanelCollapsed"
                          Width="LeftPanelWidth"
                          Sessions="ChatSessions"
                          CurrentSessionId="CurrentSessionId"
                          MessageCount="Messages.Count"
                          SidebarTemplate="SidebarTemplate"
                          OnNewChat="HandleNewChat"
                          OnCollapsedChanged="HandleCollapsedChanged"
                          OnSessionSelected="HandleSessionSelected"
                          OnEditSession="@((sessionId) => Task.CompletedTask)"
                          OnDeleteSession="HandleSessionDeleted" />
                          
            @if (!IsLeftPanelCollapsed)
            {
                <div class="panel-splitter"></div>
            }
        }

        <!-- 中间对话区域 -->
        <div class="ai-chat-center">
            <!-- 消息显示区域 -->
            <ChatMessagesArea Messages="Messages"
                            IsLoading="IsLoading"
                            OnCopyMessage="HandleCopyMessage"
                            OnRegenerateResponse="HandleRegenerateResponse"
                            OnLikeMessage="HandleLikeMessage"
                            OnSetQuickMessage="HandleSetQuickMessage" />

            <!-- 底部输入和工具栏 -->
            <ChatInputArea CurrentMessage="CurrentMessage"
                          CurrentMessageChanged="@((message) => { CurrentMessage = message; StateHasChanged(); })"
                          Placeholder="InputPlaceholder"
                          IsLoading="IsLoading"
                          IsVoiceRecording="IsVoiceRecording"
                          ToolbarTemplate="ToolbarTemplate"
                          OnSendMessage="HandleSendMessage"
                          OnAttachFile="HandleAttachFile"
                          OnInsertTemplate="HandleInsertTemplate"
                          OnToggleVoice="HandleToggleVoice"
                          OnDeepThink="HandleDeepThink"
                          OnWebSearch="HandleWebSearch" />
        </div>

        <!-- 右侧面板 -->
        @if (ShowRightPanel)
        {
            <div class="panel-splitter"></div>
            <AiSettingsPanel Width="RightPanelWidth"
                           AvailableModels="AvailableModels"
                           SelectedModel="SelectedModel"
                           SelectedModelChanged="HandleModelChanged"
                           Temperature="Temperature"
                           TemperatureChanged="HandleTemperatureChanged"
                           MaxTokens="MaxTokens"
                           MaxTokensChanged="@((tokens) => { MaxTokens = tokens; StateHasChanged(); })"
                           EnableMemory="EnableMemory"
                           EnableMemoryChanged="@((memory) => { EnableMemory = memory; StateHasChanged(); })"
                           EnableStreaming="EnableStreaming"
                           EnableStreamingChanged="@((streaming) => { EnableStreaming = streaming; StateHasChanged(); })"
                           SettingsTemplate="SettingsTemplate"
                           OnExportChat="HandleExportChat"
                           OnShareChat="HandleShareChat"
                           OnToggleTheme="HandleToggleTheme"
                           OnResetSettings="HandleResetSettings" />
        }
    </div>
</div>
